{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface CapacitorApkUpdaterPlugin {\n  /**\n   * Download and install APK from the provided URL\n   */\n  startApkDownload(options: DownloadApkOptions): Promise<DownloadApkResult>;\n\n  /**\n   * Get the current download status and progress\n   */\n  getDownloadStatus(): Promise<DownloadStatusResult>;\n\n  /**\n   * Check if the app can install APKs (has necessary permissions)\n   */\n  canInstallApks(): Promise<CanInstallResult>;\n\n  /**\n   * Request permission to install APKs (for Android 8.0+)\n   */\n  requestInstallPermission(): Promise<PermissionResult>;\n\n  /**\n   * Cancel ongoing download\n   */\n  cancelDownload(): Promise<CancelDownloadResult>;\n\n  /**\n   * Install APK from a specific file path\n   */\n  installApk(options: { filePath: string }): Promise<InstallApkResult>;\n\n  /**\n   * Get current app information (version, package name, etc.)\n   */\n  getAppInfo(): Promise<AppInfoResult>;\n\n  /**\n   * Add listener for download progress events\n   */\n  addListener(\n    eventName: 'downloadProgress',\n    listenerFunc: (event: DownloadProgressEvent) => void,\n  ): Promise<PluginListenerHandle>;\n\n  /**\n   * Add listener for download completion events\n   */\n  addListener(\n    eventName: 'downloadComplete',\n    listenerFunc: (event: DownloadCompleteEvent) => void,\n  ): Promise<PluginListenerHandle>;\n\n  /**\n   * Remove all listeners for this plugin\n   */\n  removeAllListeners(): Promise<void>;\n}\n\nexport interface PluginListenerHandle {\n  remove(): Promise<void>;\n}\n\nexport interface DownloadApkOptions {\n  /**\n   * URL to download the APK from\n   */\n  url: string;\n\n  /**\n   * Optional filename for the downloaded APK\n   * Default: 'update.apk'\n   */\n  filename?: string;\n\n  /**\n   * Whether to show download progress notification\n   * Default: true\n   */\n  showNotification?: boolean;\n\n  /**\n   * Notification title when downloading\n   * Default: 'Downloading Update...'\n   */\n  notificationTitle?: string;\n}\n\nexport interface DownloadApkResult {\n  /**\n   * Whether the download start was successful\n   */\n  success: boolean;\n\n  /**\n   * Success or error message\n   */\n  message?: string;\n\n  /**\n   * Error message if download failed to start\n   */\n  error?: string;\n}\n\nexport interface DownloadStatusResult {\n  /**\n   * Whether the status query was successful\n   */\n  success: boolean;\n\n  /**\n   * Bytes downloaded so far\n   */\n  bytesDownloaded: number;\n\n  /**\n   * Total bytes to download\n   */\n  totalSize: number;\n\n  /**\n   * Download progress percentage (0-100)\n   */\n  progress: number;\n\n  /**\n   * Android DownloadManager status code\n   */\n  status: number;\n\n  /**\n   * Path to the downloaded file (when complete)\n   */\n  filePath?: string;\n}\n\nexport interface CanInstallResult {\n  /**\n   * Whether the app can install APKs\n   */\n  canInstall: boolean;\n\n  /**\n   * Reason if installation is not possible\n   */\n  reason?: string;\n}\n\nexport interface PermissionResult {\n  /**\n   * Whether permission was granted\n   */\n  granted: boolean;\n}\n\nexport interface CancelDownloadResult {\n  /**\n   * Whether the download was successfully cancelled\n   */\n  cancelled: boolean;\n}\n\nexport interface InstallApkResult {\n  /**\n   * Whether the installation intent was successfully launched\n   */\n  success: boolean;\n\n  /**\n   * Success or error message\n   */\n  message?: string;\n\n  /**\n   * Error message if installation failed\n   */\n  error?: string;\n}\n\nexport interface AppInfoResult {\n  /**\n   * Whether app info retrieval was successful\n   */\n  success: boolean;\n\n  /**\n   * Package name of the app\n   */\n  packageName?: string;\n\n  /**\n   * Version name (e.g., \"1.0.0\")\n   */\n  versionName?: string;\n\n  /**\n   * Version code (numeric)\n   */\n  versionCode?: number;\n\n  /**\n   * Error message if retrieval failed\n   */\n  error?: string;\n}\n\nexport interface UpdateRequiredResult {\n  /**\n   * Whether an update is required\n   */\n  updateRequired: boolean;\n\n  /**\n   * Current version that was compared\n   */\n  currentVersion: string;\n\n  /**\n   * Available version that was compared\n   */\n  availableVersion: string;\n}\n\nexport interface DownloadProgressEvent {\n  /**\n   * Download progress percentage (0-100)\n   */\n  progress: number;\n\n  /**\n   * Bytes downloaded so far\n   */\n  bytesDownloaded: number;\n\n  /**\n   * Total bytes to download\n   */\n  totalSize: number;\n}\n\nexport interface DownloadCompleteEvent {\n  /**\n   * Whether the download was successful\n   */\n  success: boolean;\n\n  /**\n   * Path to the downloaded file (if successful)\n   */\n  filePath?: string;\n\n  /**\n   * Whether the APK was automatically installed\n   */\n  installed?: boolean;\n\n  /**\n   * Error message if download failed\n   */\n  error?: string;\n}\n"]}